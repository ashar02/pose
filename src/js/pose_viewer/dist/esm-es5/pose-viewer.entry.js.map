{"version":3,"names":["global$1","global","self","window","lookup","revLookup","Arr","Uint8Array","Array","inited","init","code","i","len","length","charCodeAt","toByteArray","b64","j","l","tmp","placeHolders","arr","Error","L","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","toString","isArray","call","INSPECT_MAX_BYTES","Buffer","TYPED_ARRAY_SUPPORT","undefined","kMaxLength","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","allocUnsafe","from","poolSize","_augment","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","byteLength","actual","slice","fromArrayLike","array","byteOffset","obj","internalIsBuffer","copy","isnan","type","data","isBuffer","b","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","buf","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","subarray","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","objectWriteUInt16","littleEndian","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","src","dst","isFastBuffer","isSlowBuffer","constructor","Context","importPath","useContextVariables","scopes","bitFields","tmpVariableCount","references","Map","imports","reverseImports","generateVariable","name","__spreadArray","generateOption","addImport","generateError","err","pushCode","generateTmpVariable","pushPath","popPath","pop","pushScope","popScope","im","id","get","addReference","alias","has","resolved","requested","markResolved","reference","markRequested","aliasList","_this","forEach","getUnresolvedReferences","filter","_b","_","map","aliasRegistry","FUNCTION_PREFIX","PRIMITIVE_SIZES","uint16le","uint16be","uint32le","uint32be","int8","int16le","int16be","int32le","int32be","int64be","int64le","uint64be","uint64le","floatle","floatbe","doublele","doublebe","PRIMITIVE_NAMES","PRIMITIVE_LITTLE_ENDIANS","Parser","varName","options","endian","primitiveGenerateN","ctx","typeName","primitiveN","setNextParser","useThisEndian","uint16","uint32","int16","int32","bigIntVersionCheck","DataView","getBigInt64","int64","uint64","bitN","bit1","bit2","bit3","bit4","bit5","bit6","bit7","bit8","bit9","bit10","bit11","bit12","bit13","bit14","bit15","bit16","bit17","bit18","bit19","bit20","bit21","bit22","bit23","bit24","bit25","bit26","bit27","bit28","bit29","bit30","bit31","bit32","namely","skip","seek","relOffset","assert","zeroTerminated","greedy","stripNull","readUntil","wrapped","wrapper","lengthInBytes","choice","tag","choices","keyString","key","nest","pointer","saveOffset","endianness","endianess","useContextVars","create","constructorFn","Function","getContext","addRawCode","addAliasedCode","getCode","generate","resolveReferences","_a","compile","compiled","TextDecoder","sizeOf","Object","keys","elementSize","next","parse","parser","head","generateBit","generateString","generateBuffer","generateSeek","generateNest","generateArray","generateChoice","generatePointer","generateSaveOffset","generateWrapper","generateAssert","formatter","generateFormatter","generateNext","func","JSON","stringify","bind","val_1","getMaxBits_1","sum","getBytes_1","bitOffset_1","isBigEndian_1","sum_1","rem_1","mask_1","mask","isHex","pred","cur","clone","counter","lhs","item","isHash","tempVar","parentVar","generateChoiceCase","varName_1","nestVar","tagString","tag_1","defaultChoice","wrapperVar","wrappedBuf","func_1","tempBuf","tempOff","tempView","tempVar_1","newParser","componentHeaderParser","limbParser","colorParser","strParser","text","getHeaderParser","componentParser","getBodyParserV0_0","header","personParser","components","component","pointParser","format","_points","frameParser","headerLength","parseBodyV0_0","parseBodyV0_1","points","reduce","_dims","infoParser","info","parseFloat32Array","dataView","currentOffset","vars","Float32Array","$tmp1","getFloat32","_frames","_people","confidence","frameRepresentation","people","person","k","place","point","C","dim","dimIndex","frames","Proxy","assign","headerParser","parsePose","body","version","round","empty","Pose","pose","fromLocal","path","fs.readFileSync","fromRemote","url","abortController","signal","fetch","_d","sent","ok","message","statusText","status","json","_c","arrayBuffer","PoseRenderer","viewer","v","elWidth","elPadding","width","elHeight","height","isJointValid","joint","renderJoints","joints","colors","renderJoint","renderLimbs","limbs","to","c1","c2","color","R","G","B","renderLimb","renderFrame","frame","__extends","SVGPoseRenderer","_super","h","cx","X","cy","Y","r","class","style","opacity","x1","y1","x2","y2","stroke","render","viewBox","xmlns","CanvasPoseRenderer","strokeStyle","fillStyle","radius","thickness","beginPath","arc","PI","lineWidth","moveTo","lineTo","drawCanvas","canvas","element","shadowRoot","querySelector","background","fillRect","clearRect","w","h_1","sqrt","requestAnimationFrame","poseViewerCss","PoseViewer","hasRendered","class_1","componentWillLoad","renderer","svg","srcChange","componentDidLoad","resizeObserver","ResizeObserver","setDimensions","observe","getRemotePose","fetchAbortController","abort","AbortController","initPose","loadedmetadata$","emit","loadeddata$","canplaythrough$","duration","fps","currentTime","autoplay","play","lastSrc","clearInterval","ended","loadstart$","error","console","e_2","rect","getBoundingClientRect","parseSize","by","endsWith","aspectRatio","padding","ratioWidth","ratioHeight","elAR","poseAR","syncMedia","media","addEventListener","pause","syncTime","frameTime","updateRate","playbackRate","paused","getPose","nextFrame","newTime","loop","ended$","time","play$","intervalTime","loopInterval","setInterval","lastTime_1","Date","now","pause$","disconnectedCallback","frameId","firstRender$","render$","Host"],"sources":["node_modules/rollup-plugin-node-polyfills/polyfills/global.js","node_modules/rollup-plugin-node-polyfills/polyfills/buffer-es6.js","node_modules/binary-parser/dist/esm/binary_parser.mjs","node_modules/pose-format/dist/parser.js","node_modules/rollup-plugin-node-polyfills/polyfills/empty.js","node_modules/pose-format/dist/index.js","src/components/pose-viewer/renderers/pose-renderer.tsx","src/components/pose-viewer/renderers/svg.pose-renderer.tsx","src/components/pose-viewer/renderers/canvas.pose-renderer.tsx","src/components/pose-viewer/pose-viewer.css?tag=pose-viewer&encapsulation=shadow","src/components/pose-viewer/pose-viewer.tsx"],"sourcesContent":["export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n","class Context {\n    constructor(importPath, useContextVariables) {\n        this.code = \"\";\n        this.scopes = [[\"vars\"]];\n        this.bitFields = [];\n        this.tmpVariableCount = 0;\n        this.references = new Map();\n        this.imports = [];\n        this.reverseImports = new Map();\n        this.useContextVariables = false;\n        this.importPath = importPath;\n        this.useContextVariables = useContextVariables;\n    }\n    generateVariable(name) {\n        const scopes = [...this.scopes[this.scopes.length - 1]];\n        if (name) {\n            scopes.push(name);\n        }\n        return scopes.join(\".\");\n    }\n    generateOption(val) {\n        switch (typeof val) {\n            case \"number\":\n                return val.toString();\n            case \"string\":\n                return this.generateVariable(val);\n            case \"function\":\n                return `${this.addImport(val)}.call(${this.generateVariable()}, vars)`;\n        }\n    }\n    generateError(err) {\n        this.pushCode(`throw new Error(${err});`);\n    }\n    generateTmpVariable() {\n        return \"$tmp\" + this.tmpVariableCount++;\n    }\n    pushCode(code) {\n        this.code += code + \"\\n\";\n    }\n    pushPath(name) {\n        if (name) {\n            this.scopes[this.scopes.length - 1].push(name);\n        }\n    }\n    popPath(name) {\n        if (name) {\n            this.scopes[this.scopes.length - 1].pop();\n        }\n    }\n    pushScope(name) {\n        this.scopes.push([name]);\n    }\n    popScope() {\n        this.scopes.pop();\n    }\n    addImport(im) {\n        if (!this.importPath)\n            return `(${im})`;\n        let id = this.reverseImports.get(im);\n        if (!id) {\n            id = this.imports.push(im) - 1;\n            this.reverseImports.set(im, id);\n        }\n        return `${this.importPath}[${id}]`;\n    }\n    addReference(alias) {\n        if (!this.references.has(alias)) {\n            this.references.set(alias, { resolved: false, requested: false });\n        }\n    }\n    markResolved(alias) {\n        const reference = this.references.get(alias);\n        if (reference) {\n            reference.resolved = true;\n        }\n    }\n    markRequested(aliasList) {\n        aliasList.forEach((alias) => {\n            const reference = this.references.get(alias);\n            if (reference) {\n                reference.requested = true;\n            }\n        });\n    }\n    getUnresolvedReferences() {\n        return Array.from(this.references)\n            .filter(([_, reference]) => !reference.resolved && !reference.requested)\n            .map(([alias, _]) => alias);\n    }\n}\nconst aliasRegistry = new Map();\nconst FUNCTION_PREFIX = \"___parser_\";\nconst PRIMITIVE_SIZES = {\n    uint8: 1,\n    uint16le: 2,\n    uint16be: 2,\n    uint32le: 4,\n    uint32be: 4,\n    int8: 1,\n    int16le: 2,\n    int16be: 2,\n    int32le: 4,\n    int32be: 4,\n    int64be: 8,\n    int64le: 8,\n    uint64be: 8,\n    uint64le: 8,\n    floatle: 4,\n    floatbe: 4,\n    doublele: 8,\n    doublebe: 8,\n};\nconst PRIMITIVE_NAMES = {\n    uint8: \"Uint8\",\n    uint16le: \"Uint16\",\n    uint16be: \"Uint16\",\n    uint32le: \"Uint32\",\n    uint32be: \"Uint32\",\n    int8: \"Int8\",\n    int16le: \"Int16\",\n    int16be: \"Int16\",\n    int32le: \"Int32\",\n    int32be: \"Int32\",\n    int64be: \"BigInt64\",\n    int64le: \"BigInt64\",\n    uint64be: \"BigUint64\",\n    uint64le: \"BigUint64\",\n    floatle: \"Float32\",\n    floatbe: \"Float32\",\n    doublele: \"Float64\",\n    doublebe: \"Float64\",\n};\nconst PRIMITIVE_LITTLE_ENDIANS = {\n    uint8: false,\n    uint16le: true,\n    uint16be: false,\n    uint32le: true,\n    uint32be: false,\n    int8: false,\n    int16le: true,\n    int16be: false,\n    int32le: true,\n    int32be: false,\n    int64be: false,\n    int64le: true,\n    uint64be: false,\n    uint64le: true,\n    floatle: true,\n    floatbe: false,\n    doublele: true,\n    doublebe: false,\n};\nexport class Parser {\n    constructor() {\n        this.varName = \"\";\n        this.type = \"\";\n        this.options = {};\n        this.endian = \"be\";\n        this.useContextVariables = false;\n    }\n    static start() {\n        return new Parser();\n    }\n    primitiveGenerateN(type, ctx) {\n        const typeName = PRIMITIVE_NAMES[type];\n        const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n        ctx.pushCode(`${ctx.generateVariable(this.varName)} = dataView.get${typeName}(offset, ${littleEndian});`);\n        ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n    }\n    primitiveN(type, varName, options) {\n        return this.setNextParser(type, varName, options);\n    }\n    useThisEndian(type) {\n        return (type + this.endian.toLowerCase());\n    }\n    uint8(varName, options = {}) {\n        return this.primitiveN(\"uint8\", varName, options);\n    }\n    uint16(varName, options = {}) {\n        return this.primitiveN(this.useThisEndian(\"uint16\"), varName, options);\n    }\n    uint16le(varName, options = {}) {\n        return this.primitiveN(\"uint16le\", varName, options);\n    }\n    uint16be(varName, options = {}) {\n        return this.primitiveN(\"uint16be\", varName, options);\n    }\n    uint32(varName, options = {}) {\n        return this.primitiveN(this.useThisEndian(\"uint32\"), varName, options);\n    }\n    uint32le(varName, options = {}) {\n        return this.primitiveN(\"uint32le\", varName, options);\n    }\n    uint32be(varName, options = {}) {\n        return this.primitiveN(\"uint32be\", varName, options);\n    }\n    int8(varName, options = {}) {\n        return this.primitiveN(\"int8\", varName, options);\n    }\n    int16(varName, options = {}) {\n        return this.primitiveN(this.useThisEndian(\"int16\"), varName, options);\n    }\n    int16le(varName, options = {}) {\n        return this.primitiveN(\"int16le\", varName, options);\n    }\n    int16be(varName, options = {}) {\n        return this.primitiveN(\"int16be\", varName, options);\n    }\n    int32(varName, options = {}) {\n        return this.primitiveN(this.useThisEndian(\"int32\"), varName, options);\n    }\n    int32le(varName, options = {}) {\n        return this.primitiveN(\"int32le\", varName, options);\n    }\n    int32be(varName, options = {}) {\n        return this.primitiveN(\"int32be\", varName, options);\n    }\n    bigIntVersionCheck() {\n        if (!DataView.prototype.getBigInt64)\n            throw new Error(\"BigInt64 is unsupported on this runtime\");\n    }\n    int64(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(this.useThisEndian(\"int64\"), varName, options);\n    }\n    int64be(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(\"int64be\", varName, options);\n    }\n    int64le(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(\"int64le\", varName, options);\n    }\n    uint64(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(this.useThisEndian(\"uint64\"), varName, options);\n    }\n    uint64be(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(\"uint64be\", varName, options);\n    }\n    uint64le(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(\"uint64le\", varName, options);\n    }\n    floatle(varName, options = {}) {\n        return this.primitiveN(\"floatle\", varName, options);\n    }\n    floatbe(varName, options = {}) {\n        return this.primitiveN(\"floatbe\", varName, options);\n    }\n    doublele(varName, options = {}) {\n        return this.primitiveN(\"doublele\", varName, options);\n    }\n    doublebe(varName, options = {}) {\n        return this.primitiveN(\"doublebe\", varName, options);\n    }\n    bitN(size, varName, options) {\n        options.length = size;\n        return this.setNextParser(\"bit\", varName, options);\n    }\n    bit1(varName, options = {}) {\n        return this.bitN(1, varName, options);\n    }\n    bit2(varName, options = {}) {\n        return this.bitN(2, varName, options);\n    }\n    bit3(varName, options = {}) {\n        return this.bitN(3, varName, options);\n    }\n    bit4(varName, options = {}) {\n        return this.bitN(4, varName, options);\n    }\n    bit5(varName, options = {}) {\n        return this.bitN(5, varName, options);\n    }\n    bit6(varName, options = {}) {\n        return this.bitN(6, varName, options);\n    }\n    bit7(varName, options = {}) {\n        return this.bitN(7, varName, options);\n    }\n    bit8(varName, options = {}) {\n        return this.bitN(8, varName, options);\n    }\n    bit9(varName, options = {}) {\n        return this.bitN(9, varName, options);\n    }\n    bit10(varName, options = {}) {\n        return this.bitN(10, varName, options);\n    }\n    bit11(varName, options = {}) {\n        return this.bitN(11, varName, options);\n    }\n    bit12(varName, options = {}) {\n        return this.bitN(12, varName, options);\n    }\n    bit13(varName, options = {}) {\n        return this.bitN(13, varName, options);\n    }\n    bit14(varName, options = {}) {\n        return this.bitN(14, varName, options);\n    }\n    bit15(varName, options = {}) {\n        return this.bitN(15, varName, options);\n    }\n    bit16(varName, options = {}) {\n        return this.bitN(16, varName, options);\n    }\n    bit17(varName, options = {}) {\n        return this.bitN(17, varName, options);\n    }\n    bit18(varName, options = {}) {\n        return this.bitN(18, varName, options);\n    }\n    bit19(varName, options = {}) {\n        return this.bitN(19, varName, options);\n    }\n    bit20(varName, options = {}) {\n        return this.bitN(20, varName, options);\n    }\n    bit21(varName, options = {}) {\n        return this.bitN(21, varName, options);\n    }\n    bit22(varName, options = {}) {\n        return this.bitN(22, varName, options);\n    }\n    bit23(varName, options = {}) {\n        return this.bitN(23, varName, options);\n    }\n    bit24(varName, options = {}) {\n        return this.bitN(24, varName, options);\n    }\n    bit25(varName, options = {}) {\n        return this.bitN(25, varName, options);\n    }\n    bit26(varName, options = {}) {\n        return this.bitN(26, varName, options);\n    }\n    bit27(varName, options = {}) {\n        return this.bitN(27, varName, options);\n    }\n    bit28(varName, options = {}) {\n        return this.bitN(28, varName, options);\n    }\n    bit29(varName, options = {}) {\n        return this.bitN(29, varName, options);\n    }\n    bit30(varName, options = {}) {\n        return this.bitN(30, varName, options);\n    }\n    bit31(varName, options = {}) {\n        return this.bitN(31, varName, options);\n    }\n    bit32(varName, options = {}) {\n        return this.bitN(32, varName, options);\n    }\n    namely(alias) {\n        aliasRegistry.set(alias, this);\n        this.alias = alias;\n        return this;\n    }\n    skip(length, options = {}) {\n        return this.seek(length, options);\n    }\n    seek(relOffset, options = {}) {\n        if (options.assert) {\n            throw new Error(\"assert option on seek is not allowed.\");\n        }\n        return this.setNextParser(\"seek\", \"\", { length: relOffset });\n    }\n    string(varName, options) {\n        if (!options.zeroTerminated && !options.length && !options.greedy) {\n            throw new Error(\"One of length, zeroTerminated, or greedy must be defined for string.\");\n        }\n        if ((options.zeroTerminated || options.length) && options.greedy) {\n            throw new Error(\"greedy is mutually exclusive with length and zeroTerminated for string.\");\n        }\n        if (options.stripNull && !(options.length || options.greedy)) {\n            throw new Error(\"length or greedy must be defined if stripNull is enabled.\");\n        }\n        options.encoding = options.encoding || \"utf8\";\n        return this.setNextParser(\"string\", varName, options);\n    }\n    buffer(varName, options) {\n        if (!options.length && !options.readUntil) {\n            throw new Error(\"length or readUntil must be defined for buffer.\");\n        }\n        return this.setNextParser(\"buffer\", varName, options);\n    }\n    wrapped(varName, options) {\n        if (typeof options !== \"object\" && typeof varName === \"object\") {\n            options = varName;\n            varName = \"\";\n        }\n        if (!options || !options.wrapper || !options.type) {\n            throw new Error(\"Both wrapper and type must be defined for wrapped.\");\n        }\n        if (!options.length && !options.readUntil) {\n            throw new Error(\"length or readUntil must be defined for wrapped.\");\n        }\n        return this.setNextParser(\"wrapper\", varName, options);\n    }\n    array(varName, options) {\n        if (!options.readUntil && !options.length && !options.lengthInBytes) {\n            throw new Error(\"One of readUntil, length and lengthInBytes must be defined for array.\");\n        }\n        if (!options.type) {\n            throw new Error(\"type is required for array.\");\n        }\n        if (typeof options.type === \"string\" &&\n            !aliasRegistry.has(options.type) &&\n            !(options.type in PRIMITIVE_SIZES)) {\n            throw new Error(`Array element type \"${options.type}\" is unkown.`);\n        }\n        return this.setNextParser(\"array\", varName, options);\n    }\n    choice(varName, options) {\n        if (typeof options !== \"object\" && typeof varName === \"object\") {\n            options = varName;\n            varName = \"\";\n        }\n        if (!options) {\n            throw new Error(\"tag and choices are are required for choice.\");\n        }\n        if (!options.tag) {\n            throw new Error(\"tag is requird for choice.\");\n        }\n        if (!options.choices) {\n            throw new Error(\"choices is required for choice.\");\n        }\n        for (const keyString in options.choices) {\n            const key = parseInt(keyString, 10);\n            const value = options.choices[key];\n            if (isNaN(key)) {\n                throw new Error(`Choice key \"${keyString}\" is not a number.`);\n            }\n            if (typeof value === \"string\" &&\n                !aliasRegistry.has(value) &&\n                !(value in PRIMITIVE_SIZES)) {\n                throw new Error(`Choice type \"${value}\" is unkown.`);\n            }\n        }\n        return this.setNextParser(\"choice\", varName, options);\n    }\n    nest(varName, options) {\n        if (typeof options !== \"object\" && typeof varName === \"object\") {\n            options = varName;\n            varName = \"\";\n        }\n        if (!options || !options.type) {\n            throw new Error(\"type is required for nest.\");\n        }\n        if (!(options.type instanceof Parser) && !aliasRegistry.has(options.type)) {\n            throw new Error(\"type must be a known parser name or a Parser object.\");\n        }\n        if (!(options.type instanceof Parser) && !varName) {\n            throw new Error(\"type must be a Parser object if the variable name is omitted.\");\n        }\n        return this.setNextParser(\"nest\", varName, options);\n    }\n    pointer(varName, options) {\n        if (!options.offset) {\n            throw new Error(\"offset is required for pointer.\");\n        }\n        if (!options.type) {\n            throw new Error(\"type is required for pointer.\");\n        }\n        if (typeof options.type === \"string\" &&\n            !(options.type in PRIMITIVE_SIZES) &&\n            !aliasRegistry.has(options.type)) {\n            throw new Error(`Pointer type \"${options.type}\" is unkown.`);\n        }\n        return this.setNextParser(\"pointer\", varName, options);\n    }\n    saveOffset(varName, options = {}) {\n        return this.setNextParser(\"saveOffset\", varName, options);\n    }\n    endianness(endianness) {\n        switch (endianness.toLowerCase()) {\n            case \"little\":\n                this.endian = \"le\";\n                break;\n            case \"big\":\n                this.endian = \"be\";\n                break;\n            default:\n                throw new Error('endianness must be one of \"little\" or \"big\"');\n        }\n        return this;\n    }\n    endianess(endianess) {\n        return this.endianness(endianess);\n    }\n    useContextVars(useContextVariables = true) {\n        this.useContextVariables = useContextVariables;\n        return this;\n    }\n    create(constructorFn) {\n        if (!(constructorFn instanceof Function)) {\n            throw new Error(\"Constructor must be a Function object.\");\n        }\n        this.constructorFn = constructorFn;\n        return this;\n    }\n    getContext(importPath) {\n        const ctx = new Context(importPath, this.useContextVariables);\n        ctx.pushCode(\"var dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);\");\n        if (!this.alias) {\n            this.addRawCode(ctx);\n        }\n        else {\n            this.addAliasedCode(ctx);\n            ctx.pushCode(`return ${FUNCTION_PREFIX + this.alias}(0).result;`);\n        }\n        return ctx;\n    }\n    getCode() {\n        const importPath = \"imports\";\n        return this.getContext(importPath).code;\n    }\n    addRawCode(ctx) {\n        ctx.pushCode(\"var offset = 0;\");\n        ctx.pushCode(`var vars = ${this.constructorFn ? \"new constructorFn()\" : \"{}\"};`);\n        ctx.pushCode(\"vars.$parent = null;\");\n        ctx.pushCode(\"vars.$root = vars;\");\n        this.generate(ctx);\n        this.resolveReferences(ctx);\n        ctx.pushCode(\"delete vars.$parent;\");\n        ctx.pushCode(\"delete vars.$root;\");\n        ctx.pushCode(\"return vars;\");\n    }\n    addAliasedCode(ctx) {\n        ctx.pushCode(`function ${FUNCTION_PREFIX + this.alias}(offset, context) {`);\n        ctx.pushCode(`var vars = ${this.constructorFn ? \"new constructorFn()\" : \"{}\"};`);\n        ctx.pushCode(\"var ctx = Object.assign({$parent: null, $root: vars}, context || {});\");\n        ctx.pushCode(`vars = Object.assign(vars, ctx);`);\n        this.generate(ctx);\n        ctx.markResolved(this.alias);\n        this.resolveReferences(ctx);\n        ctx.pushCode(\"Object.keys(ctx).forEach(function (item) { delete vars[item]; });\");\n        ctx.pushCode(\"return { offset: offset, result: vars };\");\n        ctx.pushCode(\"}\");\n        return ctx;\n    }\n    resolveReferences(ctx) {\n        const references = ctx.getUnresolvedReferences();\n        ctx.markRequested(references);\n        references.forEach((alias) => {\n            var _a;\n            (_a = aliasRegistry.get(alias)) === null || _a === void 0 ? void 0 : _a.addAliasedCode(ctx);\n        });\n    }\n    compile() {\n        const importPath = \"imports\";\n        const ctx = this.getContext(importPath);\n        this.compiled = new Function(importPath, \"TextDecoder\", `return function (buffer, constructorFn) { ${ctx.code} };`)(ctx.imports, TextDecoder);\n    }\n    sizeOf() {\n        let size = NaN;\n        if (Object.keys(PRIMITIVE_SIZES).indexOf(this.type) >= 0) {\n            size = PRIMITIVE_SIZES[this.type];\n            // if this is a fixed length string\n        }\n        else if (this.type === \"string\" &&\n            typeof this.options.length === \"number\") {\n            size = this.options.length;\n            // if this is a fixed length buffer\n        }\n        else if (this.type === \"buffer\" &&\n            typeof this.options.length === \"number\") {\n            size = this.options.length;\n            // if this is a fixed length array\n        }\n        else if (this.type === \"array\" &&\n            typeof this.options.length === \"number\") {\n            let elementSize = NaN;\n            if (typeof this.options.type === \"string\") {\n                elementSize = PRIMITIVE_SIZES[this.options.type];\n            }\n            else if (this.options.type instanceof Parser) {\n                elementSize = this.options.type.sizeOf();\n            }\n            size = this.options.length * elementSize;\n            // if this a skip\n        }\n        else if (this.type === \"seek\") {\n            size = this.options.length;\n            // if this is a nested parser\n        }\n        else if (this.type === \"nest\") {\n            size = this.options.type.sizeOf();\n        }\n        else if (!this.type) {\n            size = 0;\n        }\n        if (this.next) {\n            size += this.next.sizeOf();\n        }\n        return size;\n    }\n    // Follow the parser chain till the root and start parsing from there\n    parse(buffer) {\n        if (!this.compiled) {\n            this.compile();\n        }\n        return this.compiled(buffer, this.constructorFn);\n    }\n    setNextParser(type, varName, options) {\n        const parser = new Parser();\n        parser.type = type;\n        parser.varName = varName;\n        parser.options = options;\n        parser.endian = this.endian;\n        if (this.head) {\n            this.head.next = parser;\n        }\n        else {\n            this.next = parser;\n        }\n        this.head = parser;\n        return this;\n    }\n    // Call code generator for this parser\n    generate(ctx) {\n        if (this.type) {\n            switch (this.type) {\n                case \"uint8\":\n                case \"uint16le\":\n                case \"uint16be\":\n                case \"uint32le\":\n                case \"uint32be\":\n                case \"int8\":\n                case \"int16le\":\n                case \"int16be\":\n                case \"int32le\":\n                case \"int32be\":\n                case \"int64be\":\n                case \"int64le\":\n                case \"uint64be\":\n                case \"uint64le\":\n                case \"floatle\":\n                case \"floatbe\":\n                case \"doublele\":\n                case \"doublebe\":\n                    this.primitiveGenerateN(this.type, ctx);\n                    break;\n                case \"bit\":\n                    this.generateBit(ctx);\n                    break;\n                case \"string\":\n                    this.generateString(ctx);\n                    break;\n                case \"buffer\":\n                    this.generateBuffer(ctx);\n                    break;\n                case \"seek\":\n                    this.generateSeek(ctx);\n                    break;\n                case \"nest\":\n                    this.generateNest(ctx);\n                    break;\n                case \"array\":\n                    this.generateArray(ctx);\n                    break;\n                case \"choice\":\n                    this.generateChoice(ctx);\n                    break;\n                case \"pointer\":\n                    this.generatePointer(ctx);\n                    break;\n                case \"saveOffset\":\n                    this.generateSaveOffset(ctx);\n                    break;\n                case \"wrapper\":\n                    this.generateWrapper(ctx);\n                    break;\n            }\n            if (this.type !== \"bit\")\n                this.generateAssert(ctx);\n        }\n        const varName = ctx.generateVariable(this.varName);\n        if (this.options.formatter && this.type !== \"bit\") {\n            this.generateFormatter(ctx, varName, this.options.formatter);\n        }\n        return this.generateNext(ctx);\n    }\n    generateAssert(ctx) {\n        if (!this.options.assert) {\n            return;\n        }\n        const varName = ctx.generateVariable(this.varName);\n        switch (typeof this.options.assert) {\n            case \"function\":\n                {\n                    const func = ctx.addImport(this.options.assert);\n                    ctx.pushCode(`if (!${func}.call(vars, ${varName})) {`);\n                }\n                break;\n            case \"number\":\n                ctx.pushCode(`if (${this.options.assert} !== ${varName}) {`);\n                break;\n            case \"string\":\n                ctx.pushCode(`if (${JSON.stringify(this.options.assert)} !== ${varName}) {`);\n                break;\n            default:\n                throw new Error(\"assert option must be a string, number or a function.\");\n        }\n        ctx.generateError(`\"Assertion error: ${varName} is \" + ${JSON.stringify(this.options.assert.toString())}`);\n        ctx.pushCode(\"}\");\n    }\n    // Recursively call code generators and append results\n    generateNext(ctx) {\n        if (this.next) {\n            ctx = this.next.generate(ctx);\n        }\n        return ctx;\n    }\n    generateBit(ctx) {\n        // TODO find better method to handle nested bit fields\n        const parser = JSON.parse(JSON.stringify(this));\n        parser.options = this.options;\n        parser.generateAssert = this.generateAssert.bind(this);\n        parser.generateFormatter = this.generateFormatter.bind(this);\n        parser.varName = ctx.generateVariable(parser.varName);\n        ctx.bitFields.push(parser);\n        if (!this.next ||\n            (this.next && [\"bit\", \"nest\"].indexOf(this.next.type) < 0)) {\n            const val = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${val} = 0;`);\n            const getMaxBits = (from = 0) => {\n                let sum = 0;\n                for (let i = from; i < ctx.bitFields.length; i++) {\n                    const length = ctx.bitFields[i].options.length;\n                    if (sum + length > 32)\n                        break;\n                    sum += length;\n                }\n                return sum;\n            };\n            const getBytes = (sum) => {\n                if (sum <= 8) {\n                    ctx.pushCode(`${val} = dataView.getUint8(offset);`);\n                    sum = 8;\n                }\n                else if (sum <= 16) {\n                    ctx.pushCode(`${val} = dataView.getUint16(offset);`);\n                    sum = 16;\n                }\n                else if (sum <= 24) {\n                    ctx.pushCode(`${val} = (dataView.getUint16(offset) << 8) | dataView.getUint8(offset + 2);`);\n                    sum = 24;\n                }\n                else {\n                    ctx.pushCode(`${val} = dataView.getUint32(offset);`);\n                    sum = 32;\n                }\n                ctx.pushCode(`offset += ${sum / 8};`);\n                return sum;\n            };\n            let bitOffset = 0;\n            const isBigEndian = this.endian === \"be\";\n            let sum = 0;\n            let rem = 0;\n            ctx.bitFields.forEach((parser, i) => {\n                let length = parser.options.length;\n                if (length > rem) {\n                    if (rem) {\n                        const mask = -1 >>> (32 - rem);\n                        ctx.pushCode(`${parser.varName} = (${val} & 0x${mask.toString(16)}) << ${length - rem};`);\n                        length -= rem;\n                    }\n                    bitOffset = 0;\n                    rem = sum = getBytes(getMaxBits(i) - rem);\n                }\n                const offset = isBigEndian ? sum - bitOffset - length : bitOffset;\n                const mask = -1 >>> (32 - length);\n                ctx.pushCode(`${parser.varName} ${length < parser.options.length ? \"|=\" : \"=\"} ${val} >> ${offset} & 0x${mask.toString(16)};`);\n                // Ensure value is unsigned\n                if (parser.options.length === 32) {\n                    ctx.pushCode(`${parser.varName} >>>= 0`);\n                }\n                if (parser.options.assert) {\n                    parser.generateAssert(ctx);\n                }\n                if (parser.options.formatter) {\n                    parser.generateFormatter(ctx, parser.varName, parser.options.formatter);\n                }\n                bitOffset += length;\n                rem -= length;\n            });\n            ctx.bitFields = [];\n        }\n    }\n    generateSeek(ctx) {\n        const length = ctx.generateOption(this.options.length);\n        ctx.pushCode(`offset += ${length};`);\n    }\n    generateString(ctx) {\n        const name = ctx.generateVariable(this.varName);\n        const start = ctx.generateTmpVariable();\n        const encoding = this.options.encoding;\n        const isHex = encoding.toLowerCase() === \"hex\";\n        const toHex = 'b => b.toString(16).padStart(2, \"0\")';\n        if (this.options.length && this.options.zeroTerminated) {\n            const len = this.options.length;\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(`while(dataView.getUint8(offset++) !== 0 && offset - ${start} < ${len});`);\n            const end = `offset - ${start} < ${len} ? offset - 1 : offset`;\n            ctx.pushCode(isHex\n                ? `${name} = Array.from(buffer.subarray(${start}, ${end}), ${toHex}).join('');`\n                : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, ${end}));`);\n        }\n        else if (this.options.length) {\n            const len = ctx.generateOption(this.options.length);\n            ctx.pushCode(isHex\n                ? `${name} = Array.from(buffer.subarray(offset, offset + ${len}), ${toHex}).join('');`\n                : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(offset, offset + ${len}));`);\n            ctx.pushCode(`offset += ${len};`);\n        }\n        else if (this.options.zeroTerminated) {\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(\"while(dataView.getUint8(offset++) !== 0);\");\n            ctx.pushCode(isHex\n                ? `${name} = Array.from(buffer.subarray(${start}, offset - 1), ${toHex}).join('');`\n                : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset - 1));`);\n        }\n        else if (this.options.greedy) {\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(\"while(buffer.length > offset++);\");\n            ctx.pushCode(isHex\n                ? `${name} = Array.from(buffer.subarray(${start}, offset), ${toHex}).join('');`\n                : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset));`);\n        }\n        if (this.options.stripNull) {\n            ctx.pushCode(`${name} = ${name}.replace(/\\\\x00+$/g, '')`);\n        }\n    }\n    generateBuffer(ctx) {\n        const varName = ctx.generateVariable(this.varName);\n        if (typeof this.options.readUntil === \"function\") {\n            const pred = this.options.readUntil;\n            const start = ctx.generateTmpVariable();\n            const cur = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(`var ${cur} = 0;`);\n            ctx.pushCode(`while (offset < buffer.length) {`);\n            ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n            const func = ctx.addImport(pred);\n            ctx.pushCode(`if (${func}.call(${ctx.generateVariable()}, ${cur}, buffer.subarray(offset))) break;`);\n            ctx.pushCode(`offset += 1;`);\n            ctx.pushCode(`}`);\n            ctx.pushCode(`${varName} = buffer.subarray(${start}, offset);`);\n        }\n        else if (this.options.readUntil === \"eof\") {\n            ctx.pushCode(`${varName} = buffer.subarray(offset);`);\n        }\n        else {\n            const len = ctx.generateOption(this.options.length);\n            ctx.pushCode(`${varName} = buffer.subarray(offset, offset + ${len});`);\n            ctx.pushCode(`offset += ${len};`);\n        }\n        if (this.options.clone) {\n            ctx.pushCode(`${varName} = buffer.constructor.from(${varName});`);\n        }\n    }\n    generateArray(ctx) {\n        const length = ctx.generateOption(this.options.length);\n        const lengthInBytes = ctx.generateOption(this.options.lengthInBytes);\n        const type = this.options.type;\n        const counter = ctx.generateTmpVariable();\n        const lhs = ctx.generateVariable(this.varName);\n        const item = ctx.generateTmpVariable();\n        const key = this.options.key;\n        const isHash = typeof key === \"string\";\n        if (isHash) {\n            ctx.pushCode(`${lhs} = {};`);\n        }\n        else {\n            ctx.pushCode(`${lhs} = [];`);\n        }\n        if (typeof this.options.readUntil === \"function\") {\n            ctx.pushCode(\"do {\");\n        }\n        else if (this.options.readUntil === \"eof\") {\n            ctx.pushCode(`for (var ${counter} = 0; offset < buffer.length; ${counter}++) {`);\n        }\n        else if (lengthInBytes !== undefined) {\n            ctx.pushCode(`for (var ${counter} = offset + ${lengthInBytes}; offset < ${counter}; ) {`);\n        }\n        else {\n            ctx.pushCode(`for (var ${counter} = ${length}; ${counter} > 0; ${counter}--) {`);\n        }\n        if (typeof type === \"string\") {\n            if (!aliasRegistry.get(type)) {\n                const typeName = PRIMITIVE_NAMES[type];\n                const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n                ctx.pushCode(`var ${item} = dataView.get${typeName}(offset, ${littleEndian});`);\n                ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n            }\n            else {\n                const tempVar = ctx.generateTmpVariable();\n                ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset, {`);\n                if (ctx.useContextVariables) {\n                    const parentVar = ctx.generateVariable();\n                    ctx.pushCode(`$parent: ${parentVar},`);\n                    ctx.pushCode(`$root: ${parentVar}.$root,`);\n                    if (!this.options.readUntil && lengthInBytes === undefined) {\n                        ctx.pushCode(`$index: ${length} - ${counter},`);\n                    }\n                }\n                ctx.pushCode(`});`);\n                ctx.pushCode(`var ${item} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n                if (type !== this.alias)\n                    ctx.addReference(type);\n            }\n        }\n        else if (type instanceof Parser) {\n            ctx.pushCode(`var ${item} = {};`);\n            const parentVar = ctx.generateVariable();\n            ctx.pushScope(item);\n            if (ctx.useContextVariables) {\n                ctx.pushCode(`${item}.$parent = ${parentVar};`);\n                ctx.pushCode(`${item}.$root = ${parentVar}.$root;`);\n                if (!this.options.readUntil && lengthInBytes === undefined) {\n                    ctx.pushCode(`${item}.$index = ${length} - ${counter};`);\n                }\n            }\n            type.generate(ctx);\n            if (ctx.useContextVariables) {\n                ctx.pushCode(`delete ${item}.$parent;`);\n                ctx.pushCode(`delete ${item}.$root;`);\n                ctx.pushCode(`delete ${item}.$index;`);\n            }\n            ctx.popScope();\n        }\n        if (isHash) {\n            ctx.pushCode(`${lhs}[${item}.${key}] = ${item};`);\n        }\n        else {\n            ctx.pushCode(`${lhs}.push(${item});`);\n        }\n        ctx.pushCode(\"}\");\n        if (typeof this.options.readUntil === \"function\") {\n            const pred = this.options.readUntil;\n            const func = ctx.addImport(pred);\n            ctx.pushCode(`while (!${func}.call(${ctx.generateVariable()}, ${item}, buffer.subarray(offset)));`);\n        }\n    }\n    generateChoiceCase(ctx, varName, type) {\n        if (typeof type === \"string\") {\n            const varName = ctx.generateVariable(this.varName);\n            if (!aliasRegistry.has(type)) {\n                const typeName = PRIMITIVE_NAMES[type];\n                const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n                ctx.pushCode(`${varName} = dataView.get${typeName}(offset, ${littleEndian});`);\n                ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]}`);\n            }\n            else {\n                const tempVar = ctx.generateTmpVariable();\n                ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset, {`);\n                if (ctx.useContextVariables) {\n                    ctx.pushCode(`$parent: ${varName}.$parent,`);\n                    ctx.pushCode(`$root: ${varName}.$root,`);\n                }\n                ctx.pushCode(`});`);\n                ctx.pushCode(`${varName} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n                if (type !== this.alias)\n                    ctx.addReference(type);\n            }\n        }\n        else if (type instanceof Parser) {\n            ctx.pushPath(varName);\n            type.generate(ctx);\n            ctx.popPath(varName);\n        }\n    }\n    generateChoice(ctx) {\n        const tag = ctx.generateOption(this.options.tag);\n        const nestVar = ctx.generateVariable(this.varName);\n        if (this.varName) {\n            ctx.pushCode(`${nestVar} = {};`);\n            if (ctx.useContextVariables) {\n                const parentVar = ctx.generateVariable();\n                ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n                ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n            }\n        }\n        ctx.pushCode(`switch(${tag}) {`);\n        for (const tagString in this.options.choices) {\n            const tag = parseInt(tagString, 10);\n            const type = this.options.choices[tag];\n            ctx.pushCode(`case ${tag}:`);\n            this.generateChoiceCase(ctx, this.varName, type);\n            ctx.pushCode(\"break;\");\n        }\n        ctx.pushCode(\"default:\");\n        if (this.options.defaultChoice) {\n            this.generateChoiceCase(ctx, this.varName, this.options.defaultChoice);\n        }\n        else {\n            ctx.generateError(`\"Met undefined tag value \" + ${tag} + \" at choice\"`);\n        }\n        ctx.pushCode(\"}\");\n        if (this.varName && ctx.useContextVariables) {\n            ctx.pushCode(`delete ${nestVar}.$parent;`);\n            ctx.pushCode(`delete ${nestVar}.$root;`);\n        }\n    }\n    generateNest(ctx) {\n        const nestVar = ctx.generateVariable(this.varName);\n        if (this.options.type instanceof Parser) {\n            if (this.varName) {\n                ctx.pushCode(`${nestVar} = {};`);\n                if (ctx.useContextVariables) {\n                    const parentVar = ctx.generateVariable();\n                    ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n                    ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n                }\n            }\n            ctx.pushPath(this.varName);\n            this.options.type.generate(ctx);\n            ctx.popPath(this.varName);\n            if (this.varName && ctx.useContextVariables) {\n                if (ctx.useContextVariables) {\n                    ctx.pushCode(`delete ${nestVar}.$parent;`);\n                    ctx.pushCode(`delete ${nestVar}.$root;`);\n                }\n            }\n        }\n        else if (aliasRegistry.has(this.options.type)) {\n            const tempVar = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset, {`);\n            if (ctx.useContextVariables) {\n                const parentVar = ctx.generateVariable();\n                ctx.pushCode(`$parent: ${parentVar},`);\n                ctx.pushCode(`$root: ${parentVar}.$root,`);\n            }\n            ctx.pushCode(`});`);\n            ctx.pushCode(`${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n            if (this.options.type !== this.alias) {\n                ctx.addReference(this.options.type);\n            }\n        }\n    }\n    generateWrapper(ctx) {\n        const wrapperVar = ctx.generateVariable(this.varName);\n        const wrappedBuf = ctx.generateTmpVariable();\n        if (typeof this.options.readUntil === \"function\") {\n            const pred = this.options.readUntil;\n            const start = ctx.generateTmpVariable();\n            const cur = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(`var ${cur} = 0;`);\n            ctx.pushCode(`while (offset < buffer.length) {`);\n            ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n            const func = ctx.addImport(pred);\n            ctx.pushCode(`if (${func}.call(${ctx.generateVariable()}, ${cur}, buffer.subarray(offset))) break;`);\n            ctx.pushCode(`offset += 1;`);\n            ctx.pushCode(`}`);\n            ctx.pushCode(`${wrappedBuf} = buffer.subarray(${start}, offset);`);\n        }\n        else if (this.options.readUntil === \"eof\") {\n            ctx.pushCode(`${wrappedBuf} = buffer.subarray(offset);`);\n        }\n        else {\n            const len = ctx.generateOption(this.options.length);\n            ctx.pushCode(`${wrappedBuf} = buffer.subarray(offset, offset + ${len});`);\n            ctx.pushCode(`offset += ${len};`);\n        }\n        if (this.options.clone) {\n            ctx.pushCode(`${wrappedBuf} = buffer.constructor.from(${wrappedBuf});`);\n        }\n        const tempBuf = ctx.generateTmpVariable();\n        const tempOff = ctx.generateTmpVariable();\n        const tempView = ctx.generateTmpVariable();\n        const func = ctx.addImport(this.options.wrapper);\n        ctx.pushCode(`${wrappedBuf} = ${func}.call(this, ${wrappedBuf}).subarray(0);`);\n        ctx.pushCode(`var ${tempBuf} = buffer;`);\n        ctx.pushCode(`var ${tempOff} = offset;`);\n        ctx.pushCode(`var ${tempView} = dataView;`);\n        ctx.pushCode(`buffer = ${wrappedBuf};`);\n        ctx.pushCode(`offset = 0;`);\n        ctx.pushCode(`dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);`);\n        if (this.options.type instanceof Parser) {\n            if (this.varName) {\n                ctx.pushCode(`${wrapperVar} = {};`);\n            }\n            ctx.pushPath(this.varName);\n            this.options.type.generate(ctx);\n            ctx.popPath(this.varName);\n        }\n        else if (aliasRegistry.has(this.options.type)) {\n            const tempVar = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(0);`);\n            ctx.pushCode(`${wrapperVar} = ${tempVar}.result;`);\n            if (this.options.type !== this.alias) {\n                ctx.addReference(this.options.type);\n            }\n        }\n        ctx.pushCode(`buffer = ${tempBuf};`);\n        ctx.pushCode(`dataView = ${tempView};`);\n        ctx.pushCode(`offset = ${tempOff};`);\n    }\n    generateFormatter(ctx, varName, formatter) {\n        if (typeof formatter === \"function\") {\n            const func = ctx.addImport(formatter);\n            ctx.pushCode(`${varName} = ${func}.call(${ctx.generateVariable()}, ${varName});`);\n        }\n    }\n    generatePointer(ctx) {\n        const type = this.options.type;\n        const offset = ctx.generateOption(this.options.offset);\n        const tempVar = ctx.generateTmpVariable();\n        const nestVar = ctx.generateVariable(this.varName);\n        // Save current offset\n        ctx.pushCode(`var ${tempVar} = offset;`);\n        // Move offset\n        ctx.pushCode(`offset = ${offset};`);\n        if (this.options.type instanceof Parser) {\n            ctx.pushCode(`${nestVar} = {};`);\n            if (ctx.useContextVariables) {\n                const parentVar = ctx.generateVariable();\n                ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n                ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n            }\n            ctx.pushPath(this.varName);\n            this.options.type.generate(ctx);\n            ctx.popPath(this.varName);\n            if (ctx.useContextVariables) {\n                ctx.pushCode(`delete ${nestVar}.$parent;`);\n                ctx.pushCode(`delete ${nestVar}.$root;`);\n            }\n        }\n        else if (aliasRegistry.has(this.options.type)) {\n            const tempVar = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset, {`);\n            if (ctx.useContextVariables) {\n                const parentVar = ctx.generateVariable();\n                ctx.pushCode(`$parent: ${parentVar},`);\n                ctx.pushCode(`$root: ${parentVar}.$root,`);\n            }\n            ctx.pushCode(`});`);\n            ctx.pushCode(`${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n            if (this.options.type !== this.alias) {\n                ctx.addReference(this.options.type);\n            }\n        }\n        else if (Object.keys(PRIMITIVE_SIZES).indexOf(this.options.type) >= 0) {\n            const typeName = PRIMITIVE_NAMES[type];\n            const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n            ctx.pushCode(`${nestVar} = dataView.get${typeName}(offset, ${littleEndian});`);\n            ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n        }\n        // Restore offset\n        ctx.pushCode(`offset = ${tempVar};`);\n    }\n    generateSaveOffset(ctx) {\n        const varName = ctx.generateVariable(this.varName);\n        ctx.pushCode(`${varName} = offset`);\n    }\n}\n//# sourceMappingURL=binary_parser.js.map","import { Parser } from \"binary-parser\";\nfunction newParser() {\n    return new Parser().endianess(\"little\");\n}\nfunction componentHeaderParser() {\n    const limbParser = newParser()\n        .uint16(\"from\")\n        .uint16(\"to\");\n    const colorParser = newParser()\n        .uint16(\"R\")\n        .uint16(\"G\")\n        .uint16(\"B\");\n    const strParser = newParser()\n        .uint16(\"_chars\")\n        .string(\"text\", { length: \"_chars\" });\n    return newParser()\n        .uint16(\"_name\")\n        .string(\"name\", { length: \"_name\" })\n        .uint16(\"_format\")\n        .string(\"format\", { length: \"_format\" })\n        .uint16(\"_points\")\n        .uint16(\"_limbs\")\n        .uint16(\"_colors\")\n        .array(\"points\", {\n        type: strParser,\n        formatter: (arr) => arr.map((item) => item.text),\n        length: \"_points\"\n    })\n        .array(\"limbs\", {\n        type: limbParser,\n        length: \"_limbs\"\n    })\n        .array(\"colors\", {\n        type: colorParser,\n        length: \"_colors\"\n    });\n}\nfunction getHeaderParser() {\n    const componentParser = componentHeaderParser();\n    return newParser()\n        .floatle(\"version\")\n        .uint16(\"width\")\n        .uint16(\"height\")\n        .uint16(\"depth\")\n        .uint16(\"_components\")\n        .array(\"components\", {\n        type: componentParser,\n        length: \"_components\"\n    })\n        // @ts-ignore\n        .saveOffset('headerLength');\n}\nfunction getBodyParserV0_0(header) {\n    let personParser = newParser()\n        .int16(\"id\");\n    header.components.forEach(component => {\n        let pointParser = newParser();\n        Array.from(component.format).forEach(c => {\n            pointParser = pointParser.floatle(c);\n        });\n        personParser = personParser.array(component.name, {\n            \"type\": pointParser,\n            \"length\": component._points\n        });\n    });\n    const frameParser = newParser()\n        .uint16(\"_people\")\n        .array(\"people\", {\n        type: personParser,\n        length: \"_people\"\n    });\n    return newParser()\n        .seek(header.headerLength)\n        .uint16(\"fps\")\n        .uint16(\"_frames\")\n        .array(\"frames\", {\n        type: frameParser,\n        length: \"_frames\"\n    });\n}\nfunction parseBodyV0_0(header, buffer) {\n    return getBodyParserV0_0(header).parse(buffer);\n}\nfunction parseBodyV0_1(header, buffer) {\n    const _points = header.components.map(c => c.points.length).reduce((a, b) => a + b, 0);\n    const _dims = Math.max(...header.components.map(c => c.format.length)) - 1;\n    const infoParser = newParser()\n        .seek(header.headerLength)\n        .uint16(\"fps\")\n        .uint16(\"_frames\")\n        .uint16(\"_people\");\n    const info = infoParser.parse(buffer);\n    // Issue https://github.com/keichi/binary-parser/issues/208\n    const parseFloat32Array = (length, offset) => {\n        const dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);\n        let currentOffset = offset;\n        const vars = {\n            data: new Float32Array(length),\n            offset: 0\n        };\n        for (let i = 0; i < vars.data.length; i++) {\n            let $tmp1 = dataView.getFloat32(currentOffset, true);\n            currentOffset += 4;\n            vars.data[i] = $tmp1;\n        }\n        vars.offset = currentOffset;\n        return vars;\n    };\n    const data = parseFloat32Array(info._frames * info._people * _points * _dims, header.headerLength + 6);\n    const confidence = parseFloat32Array(info._frames * info._people * _points, data.offset);\n    function frameRepresentation(i) {\n        const people = new Array(info._people);\n        for (let j = 0; j < info._people; j++) {\n            const person = {};\n            people[j] = person;\n            let k = 0;\n            header.components.forEach(component => {\n                person[component.name] = [];\n                for (let l = 0; l < component.points.length; l++) {\n                    const offset = i * (info._people * _points) + j * _points;\n                    const place = offset + k + l;\n                    const point = { \"C\": confidence.data[place] };\n                    [...component.format].forEach((dim, dimIndex) => {\n                        if (dim !== \"C\") {\n                            point[dim] = data.data[place * _dims + dimIndex];\n                        }\n                    });\n                    person[component.name].push(point);\n                }\n                k += component.points.length;\n            });\n        }\n        return { people };\n    }\n    const frames = new Proxy({}, {\n        get: function (target, name) {\n            if (name === 'length') {\n                return info._frames;\n            }\n            return frameRepresentation(name);\n        }\n    });\n    return Object.assign(Object.assign({}, info), { frames });\n}\nconst headerParser = getHeaderParser();\nexport function parsePose(buffer) {\n    const header = headerParser.parse(buffer);\n    let body;\n    const version = Math.round(header.version * 1000) / 1000;\n    switch (version) {\n        case 0:\n            body = parseBodyV0_0(header, buffer);\n            break;\n        case 0.1:\n            body = parseBodyV0_1(header, buffer);\n            break;\n        default:\n            throw new Error(\"Parsing this body version is not implemented - \" + header.version);\n    }\n    return { header, body };\n}\n//# sourceMappingURL=parser.js.map","export default {};\n","import { Buffer } from \"buffer\";\nimport { parsePose } from \"./parser\";\nimport * as fs from \"fs\";\nexport * from './types';\nexport class Pose {\n    constructor(header, body) {\n        this.header = header;\n        this.body = body;\n    }\n    static from(buffer) {\n        const pose = parsePose(buffer);\n        return new Pose(pose.header, pose.body);\n    }\n    static async fromLocal(path) {\n        const buffer = fs.readFileSync(path);\n        return Pose.from(buffer);\n    }\n    static async fromRemote(url, abortController) {\n        var _a;\n        const init = {};\n        if (abortController) {\n            init.signal = abortController.signal;\n        }\n        const res = await fetch(url, init);\n        if (!res.ok) {\n            let message = (_a = res.statusText) !== null && _a !== void 0 ? _a : String(res.status);\n            try {\n                const json = await res.json();\n                message = json.message;\n            }\n            catch (e) {\n            }\n            throw new Error(message);\n        }\n        const buffer = Buffer.from(await res.arrayBuffer());\n        return Pose.from(buffer);\n    }\n}\n//# sourceMappingURL=index.js.map","import {PoseViewer} from \"../pose-viewer\";\nimport {PoseBodyFrameModel, PoseLimb, PosePointModel, RGBColor} from \"pose-format\";\n\nexport abstract class PoseRenderer {\n\n  constructor(protected viewer: PoseViewer) {\n  }\n\n  x(v: number) {\n    const n = v * (this.viewer.elWidth - 2 * this.viewer.elPadding.width);\n    return n / this.viewer.pose.header.width + this.viewer.elPadding.width;\n  }\n\n  y(v: number) {\n    const n = v * (this.viewer.elHeight - 2 * this.viewer.elPadding.height);\n    return n / this.viewer.pose.header.height + this.viewer.elPadding.height;\n  }\n\n  isJointValid(joint: PosePointModel) {\n    return joint.C > 0;\n  }\n\n  abstract renderJoint(i: number, joint: PosePointModel, color: RGBColor);\n\n  renderJoints(joints: PosePointModel[], colors: RGBColor[]) {\n    return joints\n      .filter(this.isJointValid.bind(this))\n      .map((joint, i) => {\n        return this.renderJoint(i, joint, colors[i % colors.length]);\n      });\n  }\n\n  abstract renderLimb(from: PosePointModel, to: PosePointModel, color: RGBColor);\n\n  renderLimbs(limbs: PoseLimb[], joints: PosePointModel[], colors: RGBColor[]) {\n    return limbs.map(({from, to}) => {\n      const a = joints[from];\n      const b = joints[to];\n      if (!this.isJointValid(a) || !this.isJointValid(b)) {\n        return \"\";\n      }\n\n      const c1 = colors[from % colors.length];\n      const c2 = colors[to % colors.length];\n      const color = {\n        R: (c1.R + c2.R) / 2,\n        G: (c1.G + c2.G) / 2,\n        B: (c1.B + c2.B) / 2,\n      };\n\n      return this.renderLimb(a, b, color);\n    });\n  }\n\n  renderFrame(frame: PoseBodyFrameModel) {\n    return frame.people.map(person => this.viewer.pose.header.components.map(component => {\n      const joints = person[component.name];\n      return [\n        this.renderJoints(joints, component.colors),\n        this.renderLimbs(component.limbs, joints, component.colors),\n      ]\n    }))\n  }\n\n  abstract render(frame: PoseBodyFrameModel);\n}\n","import {PoseBodyFrameModel, PosePointModel, RGBColor} from \"pose-format\";\nimport {PoseRenderer} from \"./pose-renderer\";\nimport {h} from '@stencil/core';\n\nexport class SVGPoseRenderer extends PoseRenderer {\n\n  renderJoint(i: number, joint: PosePointModel, color: RGBColor) {\n    const {R, G, B} = color;\n\n    return (<circle\n      cx={joint.X}\n      cy={joint.Y}\n      r={4}\n      class=\"joint draggable\"\n      style={({\n        fill: `rgb(${R}, ${G}, ${B})`,\n        opacity: String(joint.C)\n      })}\n      data-id={i}>\n    </circle>);\n  }\n\n  renderLimb(from: PosePointModel, to: PosePointModel, color: RGBColor) {\n    const {R, G, B} = color;\n\n    return (<line\n      x1={from.X}\n      y1={from.Y}\n      x2={to.X}\n      y2={to.Y}\n      style={{\n        stroke: `rgb(${R}, ${G}, ${B})`,\n        opacity: String((from.C + to.C) / 2)\n      }}>\n    </line>);\n  }\n\n  render(frame: PoseBodyFrameModel) {\n    const viewBox = `0 0 ${this.viewer.pose.header.width} ${this.viewer.pose.header.height}`;\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\n           viewBox={viewBox}\n           width={this.viewer.elWidth}\n           height={this.viewer.elHeight}>\n        <g>\n          {this.renderFrame(frame)}\n        </g>\n      </svg>\n    )\n  }\n}\n","import {PoseBodyFrameModel, PosePointModel, RGBColor} from \"pose-format\";\nimport {PoseRenderer} from \"./pose-renderer\";\nimport {h} from \"@stencil/core\";\n\n\nexport class CanvasPoseRenderer extends PoseRenderer {\n  ctx!: CanvasRenderingContext2D;\n  thickness!: number;\n\n  renderJoint(_: number, joint: PosePointModel, color: RGBColor) {\n    const {R, G, B} = color;\n    this.ctx.strokeStyle = `rgba(0, 0, 0, 0)`;\n    this.ctx.fillStyle = `rgba(${R}, ${G}, ${B}, ${joint.C})`;\n\n    const radius = Math.round(this.thickness / 3);\n    this.ctx.beginPath();\n    this.ctx.arc(this.x(joint.X), this.y(joint.Y), radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n    this.ctx.stroke();\n  }\n\n  renderLimb(from: PosePointModel, to: PosePointModel, color: RGBColor) {\n    const {R, G, B} = color;\n\n    this.ctx.lineWidth = this.thickness * 5/4;\n    this.ctx.strokeStyle = `rgba(${R}, ${G}, ${B}, ${(from.C + to.C) / 2})`;\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.x(from.X), this.y(from.Y));\n    this.ctx.lineTo(this.x(to.X), this.y(to.Y));\n    this.ctx.stroke();\n  }\n\n  // renderLimb(from: PosePointModel, to: PosePointModel, color: RGBColor) {\n  //   const {R, G, B} = color;\n  //   this.ctx.fillStyle = `rgba(${R}, ${G}, ${B}, ${(from.C + to.C) / 2})`;\n  //\n  //   const x = this.x((from.X + to.X) / 2);\n  //   const y = this.y((from.Y + to.Y) / 2);\n  //\n  //   const sub = {x: this.x(from.X - to.X), y: this.y(from.Y - to.Y)}\n  //\n  //   const length = Math.sqrt(Math.pow(sub.x, 2) + Math.pow(sub.y, 2));\n  //   const radiusX = Math.floor(length / 2);\n  //   const radiusY = this.thickness;\n  //   const rotation = Math.floor(Math.atan2(sub.y, sub.x) * 180 / Math.PI);\n  //   this.ctx.beginPath();\n  //   this.ctx.ellipse(x, y, radiusX, radiusY, rotation, 0, 360);\n  //   this.ctx.fill();\n  // }\n\n  render(frame: PoseBodyFrameModel) {\n    const drawCanvas = () => {\n      const canvas = this.viewer.element.shadowRoot.querySelector('canvas');\n      if (canvas) {\n        // TODO: this should be unnecessary, but stencil doesn't apply attributes\n        canvas.width = this.viewer.elWidth;\n        canvas.height = this.viewer.elHeight;\n\n        this.ctx = canvas.getContext('2d');\n\n        if (this.viewer.background) {\n          this.ctx.fillStyle = this.viewer.background;\n          this.ctx.fillRect(0, 0, canvas.width, canvas.height);\n        } else {\n          this.ctx.clearRect(0, 0, canvas.width, canvas.height);\n        }\n\n        const w = this.viewer.elWidth - 2 * this.viewer.elPadding.width;\n        const h = this.viewer.elHeight - 2 * this.viewer.elPadding.height;\n        this.thickness = this.viewer.thickness ?? Math.round(Math.sqrt(w * h) / 150);\n        this.renderFrame(frame);\n      } else {\n        throw new Error(\"Canvas isn't available before first render\")\n      }\n    };\n\n    try {\n      drawCanvas();\n    } catch (e) {\n      requestAnimationFrame(drawCanvas)\n    }\n\n\n    return (\n      <canvas width={this.viewer.elWidth} height={this.viewer.elHeight}/>\n    )\n  }\n}\n",":host {\n  display: inline-block;\n}\n\nsvg, canvas {\n  /* required for proper resizing in mobile devices */\n  max-width: 100%;\n}\n\nsvg circle {\n  stroke: black;\n  stroke-width: 1px;\n  opacity: 0.8;\n}\n\nsvg line {\n  stroke-width: 8px;\n  opacity: 0.8;\n  stroke: black;\n}\n\ncanvas {\n  display: block;\n}\n","// @ts-ignore\nimport {Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch} from '@stencil/core';\nimport type {PoseModel} from \"pose-format/dist/types\";\nimport {Pose} from \"pose-format\";\n// import {Pose, PoseModel} from \"../../../../pose_format/dist\";\nimport {PoseRenderer} from \"./renderers/pose-renderer\";\nimport {SVGPoseRenderer} from \"./renderers/svg.pose-renderer\";\nimport {CanvasPoseRenderer} from \"./renderers/canvas.pose-renderer\";\n\ndeclare type ResizeObserver = any;\ndeclare var ResizeObserver: ResizeObserver;\n\n\n@Component({\n  tag: 'pose-viewer',\n  styleUrl: 'pose-viewer.css',\n  shadow: true\n})\nexport class PoseViewer {\n  @Element() element: HTMLElement;\n  private resizeObserver: ResizeObserver;\n  private fetchAbortController: AbortController;\n\n  private lastSrc: string;\n  @Prop() src: string; // Source URL for .pose file\n  @Prop() svg: boolean = false; // Render in an SVG instead of a canvas\n\n  // Dimensions\n  @Prop() width: string = null;\n  @Prop() height: string = null;\n  @Prop() aspectRatio: number = null;\n  @Prop() padding: string = null;\n  @Prop() thickness: number = null;\n\n  @Prop() background: string = null;\n\n  elWidth: number;\n  elHeight: number;\n  elPadding: { width: number, height: number };\n\n  // MediaElement-like properties\n  @Prop({mutable: true}) loop: boolean = false;\n  @Prop() autoplay: boolean = true;\n  @Prop({mutable: true}) playbackRate: number = 1;\n\n  @Prop({mutable: true}) currentTime: number = NaN; // This affects re-rendering\n  @Prop({mutable: true}) duration: number = NaN;\n  @Prop({mutable: true}) ended: boolean = false;\n  @Prop({mutable: true}) paused: boolean = true;\n  @Prop({mutable: true}) readyState: number = 0;\n\n  // MediaElement-like events\n  @Event() canplaythrough$: EventEmitter<void>;\n  @Event() ended$: EventEmitter<void>;\n  @Event() loadeddata$: EventEmitter<void>;\n  @Event() loadedmetadata$: EventEmitter<void>;\n  @Event() loadstart$: EventEmitter<void>;\n  @Event() pause$: EventEmitter<void>;\n  @Event() play$: EventEmitter<void>;\n  @Event() firstRender$: EventEmitter<void>;\n  @Event() render$: EventEmitter<void>;\n  // @Event() ratechange$: EventEmitter<void>;\n  // @Event() seeked$: EventEmitter<void>;\n  // @Event() seeking$: EventEmitter<void>;\n  // @Event() timeupdate$: EventEmitter<void>;\n\n  hasRendered = false;\n\n  renderer!: PoseRenderer;\n\n  media: HTMLMediaElement;\n  pose: PoseModel;\n\n  @State() error: Error;\n\n  private loopInterval: any;\n\n  componentWillLoad() {\n    this.renderer = this.svg ? new SVGPoseRenderer(this) : new CanvasPoseRenderer(this);\n\n    return this.srcChange();\n  }\n\n  componentDidLoad() {\n    this.resizeObserver = new ResizeObserver(this.setDimensions.bind(this));\n    this.resizeObserver.observe(this.element);\n  }\n\n  private async getRemotePose() {\n    // Abort previous request\n    if (this.fetchAbortController) {\n      this.fetchAbortController.abort();\n    }\n\n    this.fetchAbortController = new AbortController();\n    this.pose = await Pose.fromRemote(this.src, this.fetchAbortController);\n  }\n\n  private initPose() {\n    this.setDimensions();\n\n    // Loaded done events\n    this.loadedmetadata$.emit();\n    this.loadeddata$.emit();\n    this.canplaythrough$.emit();\n\n    this.duration = (this.pose.body.frames.length - 1) / this.pose.body.fps;\n    this.currentTime = 0;\n\n    if (this.autoplay) {\n      this.play();\n    }\n  }\n\n  @Watch('src')\n  async srcChange() {\n    // Can occur from both an attribute change AND componentWillLoad event\n    if (this.src === this.lastSrc) {\n      return;\n    }\n    this.lastSrc = this.src;\n\n    // Clear previous pose\n    this.clearInterval();\n    this.setDimensions();\n    delete this.pose;\n    this.currentTime = NaN;\n    this.duration = NaN;\n    this.hasRendered = false;\n\n    if (!this.src) {\n      return;\n    }\n    // Load new pose\n    this.ended = false;\n    this.loadstart$.emit();\n\n    this.error = null;\n    try {\n      await this.getRemotePose();\n      this.initPose();\n      this.error = null;\n    } catch (e) {\n      console.error('PoseViewer error', e);\n      this.error = e;\n    }\n  }\n\n  setDimensions() {\n    this.elPadding = {width: 0, height: 0};\n    if (!this.pose) {\n      this.elWidth = 0;\n      this.elHeight = 0;\n      return;\n    }\n\n    // When nothing is marked, use pose dimensions\n    if (!this.width && !this.height) {\n      this.elWidth = this.pose.header.width;\n      this.elHeight = this.pose.header.height;\n      return;\n    }\n\n    const rect = this.element.getBoundingClientRect();\n    const parseSize = (size, by) => size.endsWith(\"px\") ? Number(size.slice(0, -2)) : (size.endsWith(\"%\") ? by * size.slice(0, -1) / 100 : Number(size));\n\n    // When both are marked,\n    if (this.width && this.height) {\n      this.elWidth = parseSize(this.width, rect.width);\n      this.elHeight = parseSize(this.height, rect.height);\n    } else if (this.width) {\n      this.elWidth = parseSize(this.width, rect.width);\n      this.elHeight = this.aspectRatio ? this.elWidth * this.aspectRatio :\n        (this.pose.header.height / this.pose.header.width) * this.elWidth;\n    } else if (this.height) {\n      this.elHeight = parseSize(this.height, rect.height);\n      this.elWidth = this.aspectRatio ? this.elHeight / this.aspectRatio :\n        (this.pose.header.width / this.pose.header.height) * this.elHeight;\n    }\n\n    // General padding\n    if (this.padding) {\n      this.elPadding.width += parseSize(this.padding, this.elWidth);\n      this.elPadding.height += parseSize(this.padding, this.elHeight);\n    }\n\n    // Aspect ratio padding\n    const ratioWidth = this.elWidth - this.elPadding.width * 2;\n    const ratioHeight = this.elHeight - this.elPadding.height * 2;\n    const elAR = ratioWidth / ratioHeight;\n    const poseAR = this.pose.header.width / this.pose.header.height;\n    if (poseAR > elAR) {\n      this.elPadding.height += (poseAR - elAR) * ratioHeight / 2;\n    } else {\n      this.elPadding.width += (1 / poseAR - 1 / elAR) * ratioWidth / 2;\n    }\n  }\n\n  @Method()\n  async syncMedia(media: HTMLMediaElement) {\n    this.media = media;\n\n    this.media.addEventListener('pause', this.pause.bind(this));\n    this.media.addEventListener('play', this.play.bind(this));\n    const syncTime = () => this.currentTime = this.frameTime(this.media.currentTime);\n    this.media.addEventListener('seek', syncTime);\n    this.media.addEventListener('timeupdate', syncTime); // To always keep synced\n\n    // Others\n    const updateRate = () => this.playbackRate = this.media.playbackRate;\n    this.media.addEventListener('ratechange', updateRate);\n    updateRate();\n\n    // Start the pose according to the video\n    this.clearInterval();\n    if (this.media.paused) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  @Method()\n  async getPose() {\n    return this.pose;\n  }\n\n\n  @Method()\n  async nextFrame() {\n    const newTime = this.currentTime + 1 / this.pose.body.fps;\n    if (newTime > this.duration) {\n      if (this.loop) {\n        this.currentTime = newTime % this.duration;\n      } else {\n        this.ended$.emit();\n        this.ended = true;\n      }\n    } else {\n      this.currentTime = newTime;\n    }\n  }\n\n  frameTime(time: number) {\n    if (!this.pose) {\n      return 0;\n    }\n    return Math.floor(time * this.pose.body.fps) / this.pose.body.fps;\n  }\n\n  @Method()\n  async play() {\n    if (!this.paused) {\n      this.clearInterval();\n    }\n\n    this.paused = false;\n    this.play$.emit();\n\n    // Reset clip if exceeded duration\n    if (this.currentTime > this.duration) {\n      this.currentTime = 0;\n    }\n\n    const intervalTime = 1000 / (this.pose.body.fps * this.playbackRate);\n    if (this.media) {\n      this.loopInterval = setInterval(() => this.currentTime = this.frameTime(this.media.currentTime), intervalTime);\n    } else {\n      // Add the time passed in an interval.\n      let lastTime = Date.now() / 1000;\n      this.loopInterval = setInterval(() => {\n        const now = Date.now() / 1000;\n        this.currentTime += (now - lastTime) * this.playbackRate;\n        lastTime = now;\n        if (this.currentTime > this.duration) {\n          if (this.loop) {\n            this.currentTime = this.currentTime % this.duration;\n          } else {\n            this.ended$.emit();\n            this.ended = true;\n\n            this.clearInterval();\n          }\n        }\n      }, intervalTime);\n    }\n  }\n\n  @Method()\n  async pause() {\n    this.paused = true;\n    this.pause$.emit();\n    this.clearInterval();\n  }\n\n  clearInterval() {\n    if (this.loopInterval) {\n      clearInterval(this.loopInterval);\n    }\n  }\n\n  disconnectedCallback() {\n    this.clearInterval();\n  }\n\n  render() {\n    if (this.error) {\n      return this.error.name !== \"AbortError\" ? this.error.message : \"\";\n    }\n\n    if (!this.pose || isNaN(this.currentTime) || !this.renderer) {\n      return \"\";\n    }\n\n    const currentTime = this.currentTime > this.duration ? this.duration : this.currentTime;\n\n    const frameId = Math.floor(currentTime * this.pose.body.fps);\n    const frame = this.pose.body.frames[frameId];\n\n    const render = this.renderer.render(frame);\n    if (!this.hasRendered) {\n      requestAnimationFrame(() => {\n        this.hasRendered = true;\n        this.firstRender$.emit();\n      });\n    }\n    requestAnimationFrame(() => this.render$.emit());\n\n    return (<Host>{render}</Host>);\n  }\n}\n\n\n"],"mappings":"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"}