import { EventEmitter } from '../../stencil-public-runtime';
import type { PoseModel } from "pose-format/dist/types";
import { PoseRenderer } from "./renderers/pose-renderer";
export declare class PoseViewer {
  element: HTMLElement;
  private resizeObserver;
  private fetchAbortController;
  private lastSrc;
  src: string;
  svg: boolean;
  width: string;
  height: string;
  aspectRatio: number;
  padding: string;
  thickness: number;
  background: string;
  elWidth: number;
  elHeight: number;
  elPadding: {
    width: number;
    height: number;
  };
  loop: boolean;
  autoplay: boolean;
  playbackRate: number;
  currentTime: number;
  duration: number;
  ended: boolean;
  paused: boolean;
  readyState: number;
  canplaythrough$: EventEmitter<void>;
  ended$: EventEmitter<void>;
  loadeddata$: EventEmitter<void>;
  loadedmetadata$: EventEmitter<void>;
  loadstart$: EventEmitter<void>;
  pause$: EventEmitter<void>;
  play$: EventEmitter<void>;
  firstRender$: EventEmitter<void>;
  render$: EventEmitter<void>;
  hasRendered: boolean;
  renderer: PoseRenderer;
  media: HTMLMediaElement;
  pose: PoseModel;
  error: Error;
  private loopInterval;
  componentWillLoad(): Promise<void>;
  componentDidLoad(): void;
  private getRemotePose;
  private initPose;
  srcChange(): Promise<void>;
  setDimensions(): void;
  syncMedia(media: HTMLMediaElement): Promise<void>;
  getPose(): Promise<PoseModel>;
  nextFrame(): Promise<void>;
  frameTime(time: number): number;
  play(): Promise<void>;
  pause(): Promise<void>;
  clearInterval(): void;
  disconnectedCallback(): void;
  render(): any;
}
