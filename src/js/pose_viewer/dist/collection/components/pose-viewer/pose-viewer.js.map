{"version":3,"file":"pose-viewer.js","sourceRoot":"","sources":["../../../src/components/pose-viewer/pose-viewer.tsx"],"names":[],"mappings":"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":["// @ts-ignore\nimport {Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch} from '@stencil/core';\nimport type {PoseModel} from \"pose-format/dist/types\";\nimport {Pose} from \"pose-format\";\n// import {Pose, PoseModel} from \"../../../../pose_format/dist\";\nimport {PoseRenderer} from \"./renderers/pose-renderer\";\nimport {SVGPoseRenderer} from \"./renderers/svg.pose-renderer\";\nimport {CanvasPoseRenderer} from \"./renderers/canvas.pose-renderer\";\n\ndeclare type ResizeObserver = any;\ndeclare var ResizeObserver: ResizeObserver;\n\n\n@Component({\n  tag: 'pose-viewer',\n  styleUrl: 'pose-viewer.css',\n  shadow: true\n})\nexport class PoseViewer {\n  @Element() element: HTMLElement;\n  private resizeObserver: ResizeObserver;\n  private fetchAbortController: AbortController;\n\n  private lastSrc: string;\n  @Prop() src: string; // Source URL for .pose file\n  @Prop() svg: boolean = false; // Render in an SVG instead of a canvas\n\n  // Dimensions\n  @Prop() width: string = null;\n  @Prop() height: string = null;\n  @Prop() aspectRatio: number = null;\n  @Prop() padding: string = null;\n  @Prop() thickness: number = null;\n\n  @Prop() background: string = null;\n\n  elWidth: number;\n  elHeight: number;\n  elPadding: { width: number, height: number };\n\n  // MediaElement-like properties\n  @Prop({mutable: true}) loop: boolean = false;\n  @Prop() autoplay: boolean = true;\n  @Prop({mutable: true}) playbackRate: number = 1;\n\n  @Prop({mutable: true}) currentTime: number = NaN; // This affects re-rendering\n  @Prop({mutable: true}) duration: number = NaN;\n  @Prop({mutable: true}) ended: boolean = false;\n  @Prop({mutable: true}) paused: boolean = true;\n  @Prop({mutable: true}) readyState: number = 0;\n\n  // MediaElement-like events\n  @Event() canplaythrough$: EventEmitter<void>;\n  @Event() ended$: EventEmitter<void>;\n  @Event() loadeddata$: EventEmitter<void>;\n  @Event() loadedmetadata$: EventEmitter<void>;\n  @Event() loadstart$: EventEmitter<void>;\n  @Event() pause$: EventEmitter<void>;\n  @Event() play$: EventEmitter<void>;\n  @Event() firstRender$: EventEmitter<void>;\n  @Event() render$: EventEmitter<void>;\n  // @Event() ratechange$: EventEmitter<void>;\n  // @Event() seeked$: EventEmitter<void>;\n  // @Event() seeking$: EventEmitter<void>;\n  // @Event() timeupdate$: EventEmitter<void>;\n\n  hasRendered = false;\n\n  renderer!: PoseRenderer;\n\n  media: HTMLMediaElement;\n  pose: PoseModel;\n\n  @State() error: Error;\n\n  private loopInterval: any;\n\n  componentWillLoad() {\n    this.renderer = this.svg ? new SVGPoseRenderer(this) : new CanvasPoseRenderer(this);\n\n    return this.srcChange();\n  }\n\n  componentDidLoad() {\n    this.resizeObserver = new ResizeObserver(this.setDimensions.bind(this));\n    this.resizeObserver.observe(this.element);\n  }\n\n  private async getRemotePose() {\n    // Abort previous request\n    if (this.fetchAbortController) {\n      this.fetchAbortController.abort();\n    }\n\n    this.fetchAbortController = new AbortController();\n    this.pose = await Pose.fromRemote(this.src, this.fetchAbortController);\n  }\n\n  private initPose() {\n    this.setDimensions();\n\n    // Loaded done events\n    this.loadedmetadata$.emit();\n    this.loadeddata$.emit();\n    this.canplaythrough$.emit();\n\n    this.duration = (this.pose.body.frames.length - 1) / this.pose.body.fps;\n    this.currentTime = 0;\n\n    if (this.autoplay) {\n      this.play();\n    }\n  }\n\n  @Watch('src')\n  async srcChange() {\n    // Can occur from both an attribute change AND componentWillLoad event\n    if (this.src === this.lastSrc) {\n      return;\n    }\n    this.lastSrc = this.src;\n\n    // Clear previous pose\n    this.clearInterval();\n    this.setDimensions();\n    delete this.pose;\n    this.currentTime = NaN;\n    this.duration = NaN;\n    this.hasRendered = false;\n\n    if (!this.src) {\n      return;\n    }\n    // Load new pose\n    this.ended = false;\n    this.loadstart$.emit();\n\n    this.error = null;\n    try {\n      await this.getRemotePose();\n      this.initPose();\n      this.error = null;\n    } catch (e) {\n      console.error('PoseViewer error', e);\n      this.error = e;\n    }\n  }\n\n  setDimensions() {\n    this.elPadding = {width: 0, height: 0};\n    if (!this.pose) {\n      this.elWidth = 0;\n      this.elHeight = 0;\n      return;\n    }\n\n    // When nothing is marked, use pose dimensions\n    if (!this.width && !this.height) {\n      this.elWidth = this.pose.header.width;\n      this.elHeight = this.pose.header.height;\n      return;\n    }\n\n    const rect = this.element.getBoundingClientRect();\n    const parseSize = (size, by) => size.endsWith(\"px\") ? Number(size.slice(0, -2)) : (size.endsWith(\"%\") ? by * size.slice(0, -1) / 100 : Number(size));\n\n    // When both are marked,\n    if (this.width && this.height) {\n      this.elWidth = parseSize(this.width, rect.width);\n      this.elHeight = parseSize(this.height, rect.height);\n    } else if (this.width) {\n      this.elWidth = parseSize(this.width, rect.width);\n      this.elHeight = this.aspectRatio ? this.elWidth * this.aspectRatio :\n        (this.pose.header.height / this.pose.header.width) * this.elWidth;\n    } else if (this.height) {\n      this.elHeight = parseSize(this.height, rect.height);\n      this.elWidth = this.aspectRatio ? this.elHeight / this.aspectRatio :\n        (this.pose.header.width / this.pose.header.height) * this.elHeight;\n    }\n\n    // General padding\n    if (this.padding) {\n      this.elPadding.width += parseSize(this.padding, this.elWidth);\n      this.elPadding.height += parseSize(this.padding, this.elHeight);\n    }\n\n    // Aspect ratio padding\n    const ratioWidth = this.elWidth - this.elPadding.width * 2;\n    const ratioHeight = this.elHeight - this.elPadding.height * 2;\n    const elAR = ratioWidth / ratioHeight;\n    const poseAR = this.pose.header.width / this.pose.header.height;\n    if (poseAR > elAR) {\n      this.elPadding.height += (poseAR - elAR) * ratioHeight / 2;\n    } else {\n      this.elPadding.width += (1 / poseAR - 1 / elAR) * ratioWidth / 2;\n    }\n  }\n\n  @Method()\n  async syncMedia(media: HTMLMediaElement) {\n    this.media = media;\n\n    this.media.addEventListener('pause', this.pause.bind(this));\n    this.media.addEventListener('play', this.play.bind(this));\n    const syncTime = () => this.currentTime = this.frameTime(this.media.currentTime);\n    this.media.addEventListener('seek', syncTime);\n    this.media.addEventListener('timeupdate', syncTime); // To always keep synced\n\n    // Others\n    const updateRate = () => this.playbackRate = this.media.playbackRate;\n    this.media.addEventListener('ratechange', updateRate);\n    updateRate();\n\n    // Start the pose according to the video\n    this.clearInterval();\n    if (this.media.paused) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  @Method()\n  async getPose() {\n    return this.pose;\n  }\n\n\n  @Method()\n  async nextFrame() {\n    const newTime = this.currentTime + 1 / this.pose.body.fps;\n    if (newTime > this.duration) {\n      if (this.loop) {\n        this.currentTime = newTime % this.duration;\n      } else {\n        this.ended$.emit();\n        this.ended = true;\n      }\n    } else {\n      this.currentTime = newTime;\n    }\n  }\n\n  frameTime(time: number) {\n    if (!this.pose) {\n      return 0;\n    }\n    return Math.floor(time * this.pose.body.fps) / this.pose.body.fps;\n  }\n\n  @Method()\n  async play() {\n    if (!this.paused) {\n      this.clearInterval();\n    }\n\n    this.paused = false;\n    this.play$.emit();\n\n    // Reset clip if exceeded duration\n    if (this.currentTime > this.duration) {\n      this.currentTime = 0;\n    }\n\n    const intervalTime = 1000 / (this.pose.body.fps * this.playbackRate);\n    if (this.media) {\n      this.loopInterval = setInterval(() => this.currentTime = this.frameTime(this.media.currentTime), intervalTime);\n    } else {\n      // Add the time passed in an interval.\n      let lastTime = Date.now() / 1000;\n      this.loopInterval = setInterval(() => {\n        const now = Date.now() / 1000;\n        this.currentTime += (now - lastTime) * this.playbackRate;\n        lastTime = now;\n        if (this.currentTime > this.duration) {\n          if (this.loop) {\n            this.currentTime = this.currentTime % this.duration;\n          } else {\n            this.ended$.emit();\n            this.ended = true;\n\n            this.clearInterval();\n          }\n        }\n      }, intervalTime);\n    }\n  }\n\n  @Method()\n  async pause() {\n    this.paused = true;\n    this.pause$.emit();\n    this.clearInterval();\n  }\n\n  clearInterval() {\n    if (this.loopInterval) {\n      clearInterval(this.loopInterval);\n    }\n  }\n\n  disconnectedCallback() {\n    this.clearInterval();\n  }\n\n  render() {\n    if (this.error) {\n      return this.error.name !== \"AbortError\" ? this.error.message : \"\";\n    }\n\n    if (!this.pose || isNaN(this.currentTime) || !this.renderer) {\n      return \"\";\n    }\n\n    const currentTime = this.currentTime > this.duration ? this.duration : this.currentTime;\n\n    const frameId = Math.floor(currentTime * this.pose.body.fps);\n    const frame = this.pose.body.frames[frameId];\n\n    const render = this.renderer.render(frame);\n    if (!this.hasRendered) {\n      requestAnimationFrame(() => {\n        this.hasRendered = true;\n        this.firstRender$.emit();\n      });\n    }\n    requestAnimationFrame(() => this.render$.emit());\n\n    return (<Host>{render}</Host>);\n  }\n}\n\n\n"]}